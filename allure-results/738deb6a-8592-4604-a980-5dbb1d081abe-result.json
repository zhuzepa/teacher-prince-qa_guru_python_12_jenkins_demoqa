{"name": "Успешное заполнение формы регистарции", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.all(('css selector', '.table-responsive .table td:nth-child(2)')).has exact texts ('Ezekiel Romaguera', 'fakedata72553@gmail.com', 'Male', '1234567890', '14 December,1905', 'English, Arts', 'Sports, Reading, Music', 'bug_hunters_tester.jpg', '841 Alvis Union', 'Haryana Karnal')\n\nReason: AssertionError: actual visible_texts: ['Ezekiel Romaguera', 'fakedata72553@gmail.com', 'Male', '1234567890', '14 December,1905', 'English, Arts', 'Sports, Reading, Music', '', '841 Alvis Union', 'Haryana Karnal']\nScreenshot: file://C:\\Users\\ChirkinAA\\.selene\\screenshots\\1694116122812\\1694116122812.png\nPageSource: file://C:\\Users\\ChirkinAA\\.selene\\screenshots\\1694116122812\\1694116122812.html", "trace": "fn = <selene.core.conditions.CollectionCondition object at 0x0000016BCCFB7CA0>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n\nvenv\\lib\\site-packages\\selene\\core\\wait.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\selene\\core\\condition.py:174: in __call__\n    return self._fn(entity)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Collection object at 0x0000016BCCFB6E90>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__ if query_to_str.startswith('<function') else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual visible_texts: ['Ezekiel Romaguera', 'fakedata72553@gmail.com', 'Male', '1234567890', '14 December,1905', 'English, Arts', 'Sports, Reading, Music', '', '841 Alvis Union', 'Haryana Karnal']\n\nvenv\\lib\\site-packages\\selene\\core\\condition.py:146: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nsetup_browser = None\n\n    @allure.title('Успешное заполнение формы регистарции')\n    def test_demoqa(setup_browser):\n    \n        browser.open('/automation-practice-form')\n    \n        browser.element('#firstName').type('Ezekiel')\n        browser.element('#lastName').type('Romaguera')\n        browser.element('#userEmail').type('fakedata72553@gmail.com')\n    \n        browser.element('label[for=\"gender-radio-1\"]').click()\n        browser.element('#userNumber').type('1234567890')\n        browser.element('#dateOfBirthInput').click()\n        browser.element('.react-datepicker__year-select').click()\n        browser.element('.react-datepicker__year-select>option[value=\"1905\"]').perform(\n            command.js.scroll_into_view\n        ).click()\n        browser.element('.react-datepicker__month-select>option[value=\"11\"]').perform(\n            command.js.scroll_into_view\n        ).click()\n    \n        browser.element('.react-datepicker__day--014').perform(command.js.click)\n        browser.element('#subjectsInput').type('English').press_enter()\n        browser.element('#subjectsInput').type('Arts').press_enter()\n        browser.element('label[for=hobbies-checkbox-1]').perform(command.js.click)\n        browser.element('label[for=hobbies-checkbox-2]').perform(command.js.click)\n        browser.element('label[for=hobbies-checkbox-3]').perform(command.js.click)\n        # browser.element('#uploadPicture').send_keys(\n        #     os.path.abspath('resources/bug_hunters_tester.jpg')\n        # )\n        browser.element('#currentAddress').type('841 Alvis Union')\n        browser.element('#state').click()\n        browser.all('[id^=react-select][id*=option]').element_by(\n            have.exact_text('Haryana')\n        ).click()\n    \n        browser.element('#city').click()\n    \n        browser.all('[id^=react-select][id*=option]').element_by(\n            have.exact_text('Karnal')\n        ).click()\n        browser.element('#submit').press_enter()\n        browser.element('#submit').perform(command.js.click)\n    \n>       browser.all('.table-responsive .table td:nth-child(2)').should(\n            have.exact_texts(\n                'Ezekiel Romaguera',\n                'fakedata72553@gmail.com',\n                'Male',\n                '1234567890',\n                '14 December,1905',\n                'English, Arts',\n                'Sports, Reading, Music',\n                'bug_hunters_tester.jpg',\n                '841 Alvis Union',\n                'Haryana Karnal',\n            )\n        )\n\ntests\\demoqa1\\test_registration_form.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\selene\\core\\entity.py:136: in should\n    self.wait.for_(condition)\nvenv\\lib\\site-packages\\selene\\core\\wait.py:143: in for_\n    return self._decorator(self)(logic)(fn)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfn = <selene.core.conditions.CollectionCondition object at 0x0000016BCCFB7CA0>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n                    reason_message = str(reason)\n    \n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=reason_message,\n                    )\n                    # TODO: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 4s, while waiting for:\nE                   browser.all(('css selector', '.table-responsive .table td:nth-child(2)')).has exact texts ('Ezekiel Romaguera', 'fakedata72553@gmail.com', 'Male', '1234567890', '14 December,1905', 'English, Arts', 'Sports, Reading, Music', 'bug_hunters_tester.jpg', '841 Alvis Union', 'Haryana Karnal')\nE                   \nE                   Reason: AssertionError: actual visible_texts: ['Ezekiel Romaguera', 'fakedata72553@gmail.com', 'Male', '1234567890', '14 December,1905', 'English, Arts', 'Sports, Reading, Music', '', '841 Alvis Union', 'Haryana Karnal']\nE                   Screenshot: file://C:\\Users\\ChirkinAA\\.selene\\screenshots\\1694116122812\\1694116122812.png\nE                   PageSource: file://C:\\Users\\ChirkinAA\\.selene\\screenshots\\1694116122812\\1694116122812.html\n\nvenv\\lib\\site-packages\\selene\\core\\wait.py:141: TimeoutException"}, "start": 1694116129652, "stop": 1694116142592, "uuid": "4a6b9486-354d-44d4-998e-e4a5e29fd0d6", "historyId": "e7a6feb92bc9b69ab2c9650e09e7fc01", "testCaseId": "e7a6feb92bc9b69ab2c9650e09e7fc01", "fullName": "tests.demoqa1.test_registration_form#test_demoqa", "labels": [{"name": "parentSuite", "value": "tests.demoqa1"}, {"name": "suite", "value": "test_registration_form"}, {"name": "host", "value": "CHIRKINAA-E15G2"}, {"name": "thread", "value": "17256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.demoqa1.test_registration_form"}]}